version: "2.0"

intents:
  # ---Generales---
  - affirm
  - deny
  - greet
  - goodbye
  - no_entiendo
  - explicame_tema
  - dame_ejemplo
  - change_current_flow
  - dar_requerimientos

entities:
  - tema
responses:
  # ---Generales---

  utter_greet:
    - text: "¡Hola! Desime algunos requerimientos que yo voy a recomendarte una arquitectura"

  utter_end_tour:
    - text: "Eso es sería todo el recorrido por las distintas fases del proceso, ante cualquier duda que tengas sobre Scrum ya sabes donde encontrarme."

  utter_goodbye:
    - text: "Adiós!"
    - text: "Hasta pronto!"

  utter_start_tour:
    - text: "Genial! Por favor acompáñame al hall así arrancamos el tour."
  
  utter_example:
    - text: "Ejemplo de Product Backlog"
  
  utter_sin_ejemplos:
    - text: "No hay mas ejemplos sobre este tema"

  utter_sin_question:
    - text: "No hay mas preguntas sobre este tema"

  utter_cross_examine_jump_global:
    - text: "Queres que explique desde ese tema y omitamos los temas intermedios o solo te explico ese tema particular"
  
  utter_cross_examine_jump_sequential:
    - text: "Queres que te explique todo de nuevo apartir de ese tema o solo te explico de nuevo ese tema particular"
  
  utter_cross_examine_example:
    - text: "Queres que te de un ejemplo de este tema o queres que te haga otra explicacion"

  utter_final:
    - text: "termino la explicacion"

  utter_architecture:
    - text: "encontre arquitectura"

  utter_no_architecture:
    - text: "Todavia no encontre una arquitectura para recomendarte"
  
  utter_requirement:
    - text: "Dale mandale requerimientos"

  utter_no_explain:
    - text: "No hay explicacion"  

  utter_no_tema:
    - text: "No dijiste tema"

  utter_default:
    - text: "No entendi lo que me queres decir"
  
  utter_layers_abstract:
    - text: "Con estos requerimientos que me mandaste va a andar mejor una arquitectura de capas. Este patrón se puede utilizar para estructurar programas que se pueden descomponer en grupos de subtareas, cada una de las cuales se encuentra en un nivel particular de abstracción. Cada capa proporciona servicios a la siguiente capa superior."  
  
  utter_layers_concrete_1:
    - text: "Para mi viene bien una arquitectura de capas para estos requerimientos. Este patrón lo podes usar para armar tu programa bien subdivido, en las capas que necesites. Cada capa usa los servicios de la capa inferior y asi vas abstrayendo una capa de la otra. Va bien hasta ahi ?"

  utter_layers_concrete_2:
    - text: "Tambien te sirve para subdividir bien el trabajo, podes hacer trabajar distintos grupos de personas en diferentes capas y no vas a tener mucha superposicion, van a trabajar mas tranquilos."   

  utter_scrum_abstract:
    - text: La metodología Scrum es un framework que se utiliza dentro de equipos que manejan proyectos complejos. Es decir, se trata de una metodología de trabajo ágil que tiene como finalidad la entrega de valor en períodos cortos de tiempo.

  utter_scrum_concrete_1:
    - text: Scrum es un marco de trabajo que se ejecuta en Sprints. Estos son ciclos temporales cortos y de duración fija, normalmente duran entre 2 y 4 semanas. Sigo?
  
  utter_scrum_concrete_2:
    - text : Al final de cada Sprint se debe obtener un incremento de producto final para ser entregado al cliente cuando lo solicite. Asi realizar sprints hasta terminar con los requisitos que tenia el proyecto  
